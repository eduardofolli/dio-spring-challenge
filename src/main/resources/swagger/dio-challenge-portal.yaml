swagger: "2.0"
info:
  description: "Desenvolvimento de projeto basico para conclusão de desafio DIO"
  version: "1.0.0"
  title: "Swagger dio challenge (Documentação e geração de models API) 2.0"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/"
tags:
  - name: "Instruments"
    description: "Everything about Instruments"
  - name: "store"
    description: "Access to Instruments Store orders"
  - name: "user"
    description: "Operations about user"
schemes:
  - "https"
  - "http"
paths:
  /instrument:
    post:
      tags:
        - "intrument"
      summary: "Add a new intrument to the store"
      description: ""
      operationId: "addInstrument"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Instrument object informations that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Instrument"
      responses:
        "405":
          description: "Invalid input"
    put:
      tags:
        - "instrument"
      summary: "Update an existing instrument"
      description: ""
      operationId: "updateInstrument"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Instrument object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Instrument"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Instrument not found"
        "405":
          description: "Validation exception"
  /instrument/findByStatus:
    get:
      tags:
        - "instrument"
      summary: "Finds instrument by status"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "findInstrumentByStatus"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "status"
          in: "query"
          description: "Status values that need to be considered for filter"
          required: true
          type: "array"
          items:
            type: "string"
            enum:
              - "Disponivel"
              - "Pendente"
              - "Vendido"
            default: "Disponivel"
          collectionFormat: "multi"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Instrument"
        "400":
          description: "Invalid status value"
  /instrument/{instrumentId}:
    get:
      tags:
        - "instrument"
      summary: "Find instrument by ID"
      description: "Returns a single instrument"
      operationId: "getInstrumentById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "instrumentId"
          in: "path"
          description: "ID of Instrument to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Instrument"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Instrument not found"
    delete:
      tags:
        - "instrument"
      summary: "Deletes a instrument"
      description: ""
      operationId: "deleteInstrument"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "instrumentId"
          in: "path"
          description: "Instrument id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Instrument not found"
  /store/order:
    post:
      tags:
        - "store"
      summary: "Place an order for a instrument"
      description: ""
      operationId: "placeOrder"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "order placed for purchasing the instrument"
          required: true
          schema:
            $ref: "#/definitions/Order"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: "Invalid Order"
  /store/order/{orderId}:
    get:
      tags:
        - "store"
      summary: "Find purchase order by ID"
      description: "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions"
      operationId: "getOrderById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "orderId"
          in: "path"
          description: "ID of instrument that needs to be fetched"
          required: true
          type: "integer"
          maximum: 10.0
          minimum: 1.0
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"
    delete:
      tags:
        - "store"
      summary: "Delete purchase order by ID"
      description: "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors"
      operationId: "deleteOrder"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "orderId"
          in: "path"
          description: "ID of the order that needs to be deleted"
          required: true
          type: "integer"
          minimum: 1.0
          format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      instrumentId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
          - "Pendente"
          - "Aprovado"
          - "Entregue"
      complete:
        type: "boolean"
        default: false
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Instrument:
    type: "object"
    required:
      - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "Guitar"
      status:
        type: "string"
        description: "Instrument status in the store"
        enum:
          - "Disponivel"
          - "Pendente"
          - "Vendido"

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"